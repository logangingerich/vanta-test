/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CreateCustomEvidenceRequestRequest = {
  auditId: string;
  createCustomEvidenceRequestInput: components.CreateCustomEvidenceRequestInput;
};

/** @internal */
export const CreateCustomEvidenceRequestRequest$inboundSchema: z.ZodType<
  CreateCustomEvidenceRequestRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  auditId: z.string(),
  CreateCustomEvidenceRequestInput:
    components.CreateCustomEvidenceRequestInput$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "CreateCustomEvidenceRequestInput": "createCustomEvidenceRequestInput",
  });
});

/** @internal */
export type CreateCustomEvidenceRequestRequest$Outbound = {
  auditId: string;
  CreateCustomEvidenceRequestInput:
    components.CreateCustomEvidenceRequestInput$Outbound;
};

/** @internal */
export const CreateCustomEvidenceRequestRequest$outboundSchema: z.ZodType<
  CreateCustomEvidenceRequestRequest$Outbound,
  z.ZodTypeDef,
  CreateCustomEvidenceRequestRequest
> = z.object({
  auditId: z.string(),
  createCustomEvidenceRequestInput:
    components.CreateCustomEvidenceRequestInput$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    createCustomEvidenceRequestInput: "CreateCustomEvidenceRequestInput",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCustomEvidenceRequestRequest$ {
  /** @deprecated use `CreateCustomEvidenceRequestRequest$inboundSchema` instead. */
  export const inboundSchema = CreateCustomEvidenceRequestRequest$inboundSchema;
  /** @deprecated use `CreateCustomEvidenceRequestRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateCustomEvidenceRequestRequest$outboundSchema;
  /** @deprecated use `CreateCustomEvidenceRequestRequest$Outbound` instead. */
  export type Outbound = CreateCustomEvidenceRequestRequest$Outbound;
}

export function createCustomEvidenceRequestRequestToJSON(
  createCustomEvidenceRequestRequest: CreateCustomEvidenceRequestRequest,
): string {
  return JSON.stringify(
    CreateCustomEvidenceRequestRequest$outboundSchema.parse(
      createCustomEvidenceRequestRequest,
    ),
  );
}

export function createCustomEvidenceRequestRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateCustomEvidenceRequestRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateCustomEvidenceRequestRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateCustomEvidenceRequestRequest' from JSON`,
  );
}
