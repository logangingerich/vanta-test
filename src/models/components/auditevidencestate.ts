/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const AuditEvidenceState = {
  Accepted: "Accepted",
  Flagged: "Flagged",
  Initialized: "Initialized",
  Na: "NA",
  NotReadyForAudit: "Not ready for audit",
  ReadyForAudit: "Ready for audit",
} as const;
export type AuditEvidenceState = ClosedEnum<typeof AuditEvidenceState>;

/** @internal */
export const AuditEvidenceState$inboundSchema: z.ZodNativeEnum<
  typeof AuditEvidenceState
> = z.nativeEnum(AuditEvidenceState);

/** @internal */
export const AuditEvidenceState$outboundSchema: z.ZodNativeEnum<
  typeof AuditEvidenceState
> = AuditEvidenceState$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuditEvidenceState$ {
  /** @deprecated use `AuditEvidenceState$inboundSchema` instead. */
  export const inboundSchema = AuditEvidenceState$inboundSchema;
  /** @deprecated use `AuditEvidenceState$outboundSchema` instead. */
  export const outboundSchema = AuditEvidenceState$outboundSchema;
}
