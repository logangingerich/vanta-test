/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The current state of a vendor:
 *
 * @remarks
 * - MANAGED: The vendor is actively managed.
 * - ARCHIVED: The vendor has been archived
 * - IN_PROCUREMENT: The vendor is in the procurement process
 */
export const VendorStatus = {
  Managed: "MANAGED",
  Archived: "ARCHIVED",
  InProcurement: "IN_PROCUREMENT",
} as const;
/**
 * The current state of a vendor:
 *
 * @remarks
 * - MANAGED: The vendor is actively managed.
 * - ARCHIVED: The vendor has been archived
 * - IN_PROCUREMENT: The vendor is in the procurement process
 */
export type VendorStatus = ClosedEnum<typeof VendorStatus>;

/** @internal */
export const VendorStatus$inboundSchema: z.ZodNativeEnum<typeof VendorStatus> =
  z.nativeEnum(VendorStatus);

/** @internal */
export const VendorStatus$outboundSchema: z.ZodNativeEnum<typeof VendorStatus> =
  VendorStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VendorStatus$ {
  /** @deprecated use `VendorStatus$inboundSchema` instead. */
  export const inboundSchema = VendorStatus$inboundSchema;
  /** @deprecated use `VendorStatus$outboundSchema` instead. */
  export const outboundSchema = VendorStatus$outboundSchema;
}
