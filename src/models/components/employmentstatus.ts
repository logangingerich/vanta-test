/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The employment status of a person:
 *
 * @remarks
 * - UPCOMING: The person is not yet employed and will start employment in the future.
 * - CURRENT: The person is currently employed.
 * - ON_LEAVE: The person is on leave.
 * - INACTIVE: The person's employment is inactive.
 * - FORMER: The person was previously employed.
 */
export const EmploymentStatus = {
  Upcoming: "UPCOMING",
  Current: "CURRENT",
  OnLeave: "ON_LEAVE",
  Inactive: "INACTIVE",
  Former: "FORMER",
} as const;
/**
 * The employment status of a person:
 *
 * @remarks
 * - UPCOMING: The person is not yet employed and will start employment in the future.
 * - CURRENT: The person is currently employed.
 * - ON_LEAVE: The person is on leave.
 * - INACTIVE: The person's employment is inactive.
 * - FORMER: The person was previously employed.
 */
export type EmploymentStatus = ClosedEnum<typeof EmploymentStatus>;

/** @internal */
export const EmploymentStatus$inboundSchema: z.ZodNativeEnum<
  typeof EmploymentStatus
> = z.nativeEnum(EmploymentStatus);

/** @internal */
export const EmploymentStatus$outboundSchema: z.ZodNativeEnum<
  typeof EmploymentStatus
> = EmploymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmploymentStatus$ {
  /** @deprecated use `EmploymentStatus$inboundSchema` instead. */
  export const inboundSchema = EmploymentStatus$inboundSchema;
  /** @deprecated use `EmploymentStatus$outboundSchema` instead. */
  export const outboundSchema = EmploymentStatus$outboundSchema;
}
