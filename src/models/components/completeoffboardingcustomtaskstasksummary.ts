/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CustomTask,
  CustomTask$inboundSchema,
  CustomTask$Outbound,
  CustomTask$outboundSchema,
} from "./customtask.js";
import {
  TaskStatus,
  TaskStatus$inboundSchema,
  TaskStatus$outboundSchema,
} from "./taskstatus.js";
import {
  TaskTypeCOMPLETECUSTOMOFFBOARDINGTASKS,
  TaskTypeCOMPLETECUSTOMOFFBOARDINGTASKS$inboundSchema,
  TaskTypeCOMPLETECUSTOMOFFBOARDINGTASKS$outboundSchema,
} from "./tasktypecompletecustomoffboardingtasks.js";

/**
 * If the task is disabled, the reason and date when it was disabled.
 */
export type CompleteOffboardingCustomTasksTaskSummaryDisabled = {
  date: Date;
  reason: string | null;
};

/**
 * Task summary for completing all offboarding custom tasks.
 */
export type CompleteOffboardingCustomTasksTaskSummary = {
  taskType: TaskTypeCOMPLETECUSTOMOFFBOARDINGTASKS;
  /**
   * The status of a task.
   *
   * @remarks
   * - COMPLETE: The task has been completed.
   * - DUE_SOON: The task is due soon.
   * - OVERDUE: The task is overdue.
   * - NONE: The task is not assigned.
   */
  status: TaskStatus;
  /**
   * The due date of the task.
   */
  dueDate: Date | null;
  /**
   * The date the task was completed.
   */
  completionDate: Date | null;
  /**
   * If the task is disabled, the reason and date when it was disabled.
   */
  disabled: CompleteOffboardingCustomTasksTaskSummaryDisabled | null;
  /**
   * Incomplete custom tasks that are relevant given a person's requirements.
   */
  incompleteCustomOffboardingTasks: Array<CustomTask>;
  /**
   * Custom tasks that have been completed and are relevant given a person's current requirements.
   */
  completedCustomOffboardingTasks: Array<CustomTask>;
};

/** @internal */
export const CompleteOffboardingCustomTasksTaskSummaryDisabled$inboundSchema:
  z.ZodType<
    CompleteOffboardingCustomTasksTaskSummaryDisabled,
    z.ZodTypeDef,
    unknown
  > = z.object({
    date: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    reason: z.nullable(z.string()),
  });

/** @internal */
export type CompleteOffboardingCustomTasksTaskSummaryDisabled$Outbound = {
  date: string;
  reason: string | null;
};

/** @internal */
export const CompleteOffboardingCustomTasksTaskSummaryDisabled$outboundSchema:
  z.ZodType<
    CompleteOffboardingCustomTasksTaskSummaryDisabled$Outbound,
    z.ZodTypeDef,
    CompleteOffboardingCustomTasksTaskSummaryDisabled
  > = z.object({
    date: z.date().transform(v => v.toISOString()),
    reason: z.nullable(z.string()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompleteOffboardingCustomTasksTaskSummaryDisabled$ {
  /** @deprecated use `CompleteOffboardingCustomTasksTaskSummaryDisabled$inboundSchema` instead. */
  export const inboundSchema =
    CompleteOffboardingCustomTasksTaskSummaryDisabled$inboundSchema;
  /** @deprecated use `CompleteOffboardingCustomTasksTaskSummaryDisabled$outboundSchema` instead. */
  export const outboundSchema =
    CompleteOffboardingCustomTasksTaskSummaryDisabled$outboundSchema;
  /** @deprecated use `CompleteOffboardingCustomTasksTaskSummaryDisabled$Outbound` instead. */
  export type Outbound =
    CompleteOffboardingCustomTasksTaskSummaryDisabled$Outbound;
}

export function completeOffboardingCustomTasksTaskSummaryDisabledToJSON(
  completeOffboardingCustomTasksTaskSummaryDisabled:
    CompleteOffboardingCustomTasksTaskSummaryDisabled,
): string {
  return JSON.stringify(
    CompleteOffboardingCustomTasksTaskSummaryDisabled$outboundSchema.parse(
      completeOffboardingCustomTasksTaskSummaryDisabled,
    ),
  );
}

export function completeOffboardingCustomTasksTaskSummaryDisabledFromJSON(
  jsonString: string,
): SafeParseResult<
  CompleteOffboardingCustomTasksTaskSummaryDisabled,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompleteOffboardingCustomTasksTaskSummaryDisabled$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CompleteOffboardingCustomTasksTaskSummaryDisabled' from JSON`,
  );
}

/** @internal */
export const CompleteOffboardingCustomTasksTaskSummary$inboundSchema: z.ZodType<
  CompleteOffboardingCustomTasksTaskSummary,
  z.ZodTypeDef,
  unknown
> = z.object({
  taskType: TaskTypeCOMPLETECUSTOMOFFBOARDINGTASKS$inboundSchema,
  status: TaskStatus$inboundSchema,
  dueDate: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  completionDate: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  disabled: z.nullable(
    z.lazy(() =>
      CompleteOffboardingCustomTasksTaskSummaryDisabled$inboundSchema
    ),
  ),
  incompleteCustomOffboardingTasks: z.array(CustomTask$inboundSchema),
  completedCustomOffboardingTasks: z.array(CustomTask$inboundSchema),
});

/** @internal */
export type CompleteOffboardingCustomTasksTaskSummary$Outbound = {
  taskType: string;
  status: string;
  dueDate: string | null;
  completionDate: string | null;
  disabled: CompleteOffboardingCustomTasksTaskSummaryDisabled$Outbound | null;
  incompleteCustomOffboardingTasks: Array<CustomTask$Outbound>;
  completedCustomOffboardingTasks: Array<CustomTask$Outbound>;
};

/** @internal */
export const CompleteOffboardingCustomTasksTaskSummary$outboundSchema:
  z.ZodType<
    CompleteOffboardingCustomTasksTaskSummary$Outbound,
    z.ZodTypeDef,
    CompleteOffboardingCustomTasksTaskSummary
  > = z.object({
    taskType: TaskTypeCOMPLETECUSTOMOFFBOARDINGTASKS$outboundSchema,
    status: TaskStatus$outboundSchema,
    dueDate: z.nullable(z.date().transform(v => v.toISOString())),
    completionDate: z.nullable(z.date().transform(v => v.toISOString())),
    disabled: z.nullable(
      z.lazy(() =>
        CompleteOffboardingCustomTasksTaskSummaryDisabled$outboundSchema
      ),
    ),
    incompleteCustomOffboardingTasks: z.array(CustomTask$outboundSchema),
    completedCustomOffboardingTasks: z.array(CustomTask$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompleteOffboardingCustomTasksTaskSummary$ {
  /** @deprecated use `CompleteOffboardingCustomTasksTaskSummary$inboundSchema` instead. */
  export const inboundSchema =
    CompleteOffboardingCustomTasksTaskSummary$inboundSchema;
  /** @deprecated use `CompleteOffboardingCustomTasksTaskSummary$outboundSchema` instead. */
  export const outboundSchema =
    CompleteOffboardingCustomTasksTaskSummary$outboundSchema;
  /** @deprecated use `CompleteOffboardingCustomTasksTaskSummary$Outbound` instead. */
  export type Outbound = CompleteOffboardingCustomTasksTaskSummary$Outbound;
}

export function completeOffboardingCustomTasksTaskSummaryToJSON(
  completeOffboardingCustomTasksTaskSummary:
    CompleteOffboardingCustomTasksTaskSummary,
): string {
  return JSON.stringify(
    CompleteOffboardingCustomTasksTaskSummary$outboundSchema.parse(
      completeOffboardingCustomTasksTaskSummary,
    ),
  );
}

export function completeOffboardingCustomTasksTaskSummaryFromJSON(
  jsonString: string,
): SafeParseResult<
  CompleteOffboardingCustomTasksTaskSummary,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CompleteOffboardingCustomTasksTaskSummary$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CompleteOffboardingCustomTasksTaskSummary' from JSON`,
  );
}
